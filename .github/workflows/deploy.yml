name: Deploy React App with Nginx to Lightsail

on:
  push:
    branches:
      - main  # main 브랜치에 푸시되면 실행

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/react-nginx-app:latest .

      - name: Push to Docker Hub
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/react-nginx-app:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Deploy to AWS Lightsail
        env:
        SSH_PRIVATE_KEY: ${{ secrets.LIGHTSAIL_SSH_PRIVATE_KEY }}
        LIGHTSAIL_HOST: ${{ secrets.LIGHTSAIL_SERVER_IP }}
        LIGHTSAIL_USER: ubuntu
        IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/react-nginx-app
        IMAGE_TAG: latest
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
  
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no $LIGHTSAIL_USER@$LIGHTSAIL_HOST bash -s <<EOF
            set -e
            IMAGE_NAME="$IMAGE_NAME"
            IMAGE_TAG="$IMAGE_TAG"
  
            docker pull \$IMAGE_NAME:\$IMAGE_TAG
  
            if [ "\$(docker ps -q -f name=react-nginx-app)" ]; then
              docker stop react-nginx-app
              docker rm react-nginx-app
            fi
  
            docker run -d --name react-nginx-app -p 80:80 \$IMAGE_NAME:\$IMAGE_TAG
  
            docker image prune -f
          EOF
